from .._ml import link_vectors_to_models as link_vectors_to_models
from ..language import component as component
from .pipes import Pipe as Pipe
from typing import Any, Optional

class SentenceSegmenter:
    vocab: Any = ...
    strategy: Any = ...
    def __init__(self, vocab: Any, strategy: Optional[Any] = ...) -> None: ...
    def __call__(self, doc: Any): ...
    @staticmethod
    def split_on_punct(doc: Any) -> None: ...

class SimilarityHook(Pipe):
    vocab: Any = ...
    model: Any = ...
    cfg: Any = ...
    def __init__(self, vocab: Any, model: bool = ..., **cfg: Any) -> None: ...
    @classmethod
    def Model(cls, length: Any): ...
    def __call__(self, doc: Any): ...
    def pipe(self, docs: Any, **kwargs: Any) -> None: ...
    def predict(self, doc1: Any, doc2: Any): ...
    def update(self, doc1_doc2: Any, golds: Any, sgd: Optional[Any] = ..., drop: float = ...) -> None: ...
    def begin_training(self, _: Any = ..., pipeline: Optional[Any] = ..., sgd: Optional[Any] = ..., **kwargs: Any): ...
